Set:
Основная функциональность:
множество, основная отличительная особенность-хранение экземпляров в единственном экземпляре
Примеры типичного использования:
Set<String> dictionary=new TreeSet<>();//словарь-элементы находятся в отсортированном виде
(String реализует интерфейс Comparable) и в единственном экземпляре

List:
Основная функциональность:
Список однотипных элементов, может содержать повторяющиеся элементы, имеется возможность доступа к элементу по индексу
Примеры типичного использования
List<String> toDoList=new LinkedList<>();

Queue:
Основная функциональность:
набор элементов хранится в порядке, нужно для их обработки
имеются методы offer() (отличается от add() тем, что add() в случае неудачной вставки выбросит исключение)
remove(),poll()-возвращается и удаляют верхушку очереди (с выбросом исключения и без соот-но)
element(),peek()-возвращают элементы, при этом их не удаляя (с выбросом исключения и без соот-но)
Примеры типичного использования
Queue<Work> workToDo=new PriorityQueue<>();//очередь, позволяющая хранить список дел по работе, хранятся в порядке по приоритетам.
Элементы автоматически размещаются согласно естественному порядку сортировки(если элементы реализуют Comparable), либо в специальном
порядке, используя Comparator

Map:коллекция для быстрого доступа к элементам. Хранит пары ключ-значение
Основная функциональность
Примеры типичного использования
Map<Integer,Drink> vendingMachine=new HashMap<>(); //автомат с напитками-вводим кюч, получаем напиток